{"version":3,"file":"vue.js","sources":["../src/util.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null;\n}","let oldArrayPrototype = Array.prototype;\nexport let arrayMethods = Object.create(oldArrayPrototype);\n// arrayMethods.__proto__=Array.prototype 继承\n\nlet methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'sort',\n    'splice'\n]\n\nmethods.forEach(method => {\n    // 用户调用的如果是以上七个方法，会用自己重写的方法，否则用原来的数组方法\n    arrayMethods[method] = function (...args) {\n        oldArrayPrototype[method].call(this, ...args);\n        \n        // arr.push({a:1},{b:1})\n        // arr.splice(0,1,xxx);\n        let inserted;\n        let ob = this.__ob__; // 根据当前数组获取到Observe实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;//就是新增的内容\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        // 如果有新增的内内容要进行继续劫持，需要观测数组中的每一项，而不是数组\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n    }\n})","import { isObject } from \"../util\";\nimport { arrayMethods } from \"./array\";\n\n// 如果数据是对象，会将对象不停的递归，进行劫持\n// 如果是数组，会劫持数组的方法，并对数组中不是基本数据类型的进行监测\n\n// 类监测数据的变化，类有类型；对象无类型\nclass Observe {\n    constructor(data) { // 对对象中的所有属性进行劫持\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 不可枚举\n        })\n        //data.__ob__ = this; //所有被劫持过的属性都有__ob__属性\n        if (Array.isArray(data)) {\n            // 数组的劫持逻辑\n            // 对数组原来的方法进行改写，切片编程 高阶函数\n            data.__proto__ = arrayMethods;\n            // 如果数组中的数据是对象类型，需要监控对象的变化\n            this.observeArray(data);\n        } else {\n            this.walk(data); // 对象的劫持逻辑\n        }\n    }\n    observeArray(data) { // 对数组中的数组 和数组中的对象再次劫持，递归\n        data.forEach(item => {\n            observe(item);\n        })\n    }\n    walk(data) {\n        Object.keys(data).forEach(key => {\n            defineReactive(data, key, data[key]);\n        })\n    }\n}\n\n// vue2会对对象进行遍历，将每个属性用defineProperty重新进行定义，性能差\nfunction defineReactive(data, key, value) {// value有可能是对象\n    observe(value); // 本身用户默认值是对象套对象，需要递归处理（性能差）\n    Object.defineProperty(data, key, {\n        get() {\n            return value;\n        },\n        set(newV) {\n            observe(newV); //如果用户赋值一个新对象，需要将这个对象进行劫持\n            value = newV;\n        }\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才监测\n    if (!isObject(data)) {\n        return;\n    }\n\n    if (data.__ob__) {\n        return;\n    }\n\n    // 默认最外层的data必须是一个对象\n    return new Observe(data);\n}","import { observe } from \"./observer/index\";\nimport { isFunction } from \"./util\";\n\nexport function initState(vm) { // 状态的初始化\n    const opts = vm.$options;\n    // if (opts.props) {\n    //     initProps();\n    // }\n    if (opts.data) {\n        initData(vm);\n    }\n    // if (opts.computed) {\n    //     initComputed();\n    // }\n    // if (opts.watch) {\n    //     initWatch();\n    // }\n}\n\nfunction proxy(vm,source,key) {\n    Object.defineProperty(vm, key, {\n        get(){\n            return vm[source][key];\n        },\n        set(newValue) {\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data; //vue内部会对属性检测，如果是以$开头，不会进行代理\n\n    // vue2中会将data中的所有数据，进行数据劫持 Object.defineProperty\n    // 此时vm和data没有关系，通过vm._data进行关联\n    data=vm._data = isFunction(data) ? data.call(vm) : data;\n    \n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n    observe(data);\n}","import { initState } from \"./state\";\n\nexport function initMixin(Vue) { // 表示在vue的基础上做一次混合操作\n    Vue.prototype._init = function (options) {\n        // el.data\n        const vm = this;\n        vm.$options = options; // 见用户的选项都放到了当前实例\n\n        // 对数据进行初始化 watch computed props data ...\n        initState(vm);\n    }\n}","import { initMixin } from \"./init\";\n\nfunction Vue(options) {\n    // options为用户传入的选项\n    this._init(options); // 初始化操作  \n}\n\n// 扩展原型\ninitMixin(Vue);\n\nexport default Vue;"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observe","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","proxy","source","newValue","_data","initMixin","Vue","_init","options"],"mappings":"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"}