{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/util.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = '[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*';  // 标签名\nconst qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\"; // <aa:xxx></aa:xxx>\nconst startTagOpen = new RegExp((\"^<\" + qnameCapture)); // 匹配开始标签\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签关闭 </div>\nconst endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\")); // 匹配闭合标签\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; \nconst defaultTagRE = /\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{{}}\n\n// html字符串解析成dom 对应的脚本触发 tokens\n\nfunction start(tagName,attributes) {\n    console.log('start', tagName, attributes);\n}\nfunction end(tagName) {\n    console.log('end', tagName);\n}\nfunction chars(text) {\n    console.log('chars', text);\n}\n\nfunction parserHTML(html) {\n    function advance(len) {\n        html = html.substring(len);\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs:[]\n            }\n            advance(start[0].length);\n            \n            let end;\n            // 如果没有遇到标签结尾就不停的解析\n            let attr;\n            while (!(end=html.match(startTagClose)) && (attr=html.match(attribute))) {\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n                advance(attr[0].length);\n            }\n            if (end) {\n                advance(end[0].length);\n            }\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n\n    while (html) { // 看要解析的内容是都存在，如果存在就不停的解析\n        let textEnd = html.indexOf('<'); // 当前解析的开头\n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(html); // 解析开始标签\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            const endTagMatch = html.match(endTag); // 解析结束标签\n            if (endTagMatch) {\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n            }\n        }\n        let text;\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd);\n        }\n        if (text) {\n            chars(text);\n            advance(text.length);\n        }\n\n    }\n}\n\nexport function compilerFunction(template) {\n        \n    parserHTML(template);\n}","export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null;\n}","let oldArrayPrototype = Array.prototype;\nexport let arrayMethods = Object.create(oldArrayPrototype);\n// arrayMethods.__proto__=Array.prototype 继承\n\nlet methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice'\n]\n\nmethods.forEach(method => {\n    // 用户调用的如果是以上七个方法，会用自己重写的方法，否则用原来的数组方法\n    arrayMethods[method] = function (...args) {\n        oldArrayPrototype[method].call(this, ...args);\n        \n        // arr.push({a:1},{b:1})\n        // arr.splice(0,1,xxx);\n        let inserted;\n        let ob = this.__ob__; // 根据当前数组获取到Observe实例\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;//就是新增的内容\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        // 如果有新增的内内容要进行继续劫持，需要观测数组中的每一项，而不是数组\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n    }\n})","import { isObject } from \"../util\";\nimport { arrayMethods } from \"./array\";\n\n// 如果数据是对象，会将对象不停的递归，进行劫持\n// 如果是数组，会劫持数组的方法，并对数组中不是基本数据类型的进行监测\n\n// 类监测数据的变化，类有类型；对象无类型\nclass Observe {\n    constructor(data) { // 对对象中的所有属性进行劫持\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false // 不可枚举\n        })\n        //data.__ob__ = this; //所有被劫持过的属性都有__ob__属性\n        if (Array.isArray(data)) {\n            // 数组的劫持逻辑\n            // 对数组原来的方法进行改写，切片编程 高阶函数\n            data.__proto__ = arrayMethods;\n            // 如果数组中的数据是对象类型，需要监控对象的变化\n            this.observeArray(data);\n        } else {\n            this.walk(data); // 对象的劫持逻辑\n        }\n    }\n    observeArray(data) { // 对数组中的数组 和数组中的对象再次劫持，递归\n        data.forEach(item => {\n            observe(item);\n        })\n    }\n    walk(data) {\n        Object.keys(data).forEach(key => {\n            defineReactive(data, key, data[key]);\n        })\n    }\n}\n\n// vue2会对对象进行遍历，将每个属性用defineProperty重新进行定义，性能差\nfunction defineReactive(data, key, value) {// value有可能是对象\n    observe(value); // 本身用户默认值是对象套对象，需要递归处理（性能差）\n    Object.defineProperty(data, key, {\n        get() {\n            return value;\n        },\n        set(newV) {\n            observe(newV); //如果用户赋值一个新对象，需要将这个对象进行劫持\n            value = newV;\n        }\n    })\n}\n\nexport function observe(data) {\n    // 如果是对象才监测\n    if (!isObject(data)) {\n        return;\n    }\n\n    if (data.__ob__) {\n        return;\n    }\n\n    // 默认最外层的data必须是一个对象\n    return new Observe(data);\n}","import { observe } from \"./observer/index\";\nimport { isFunction } from \"./util\";\n\nexport function initState(vm) { // 状态的初始化\n    const opts = vm.$options;\n    // if (opts.props) {\n    //     initProps();\n    // }\n    if (opts.data) {\n        initData(vm);\n    }\n    // if (opts.computed) {\n    //     initComputed();\n    // }\n    // if (opts.watch) {\n    //     initWatch();\n    // }\n}\n\nfunction proxy(vm,source,key) {\n    Object.defineProperty(vm, key, {\n        get(){\n            return vm[source][key];\n        },\n        set(newValue) {\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nfunction initData(vm) {\n    let data = vm.$options.data; //vue内部会对属性检测，如果是以$开头，不会进行代理\n\n    // vue2中会将data中的所有数据，进行数据劫持 Object.defineProperty\n    // 此时vm和data没有关系，通过vm._data进行关联\n    data=vm._data = isFunction(data) ? data.call(vm) : data;\n    \n    // vm.xxx===vm._data.xxx\n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n    observe(data);\n}","import { compilerFunction } from \"./compiler/index\";\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) { // 表示在vue的基础上做一次混合操作\n    Vue.prototype._init = function (options) {\n        // el.data\n        const vm = this;\n        vm.$options = options; // 用户的选项都放到了当前实例\n\n        // 对数据进行初始化 watch computed props data ...\n        initState(vm);\n\n        if (vm.$options.el) {\n            // 将数据挂载到这个模版上\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n\n        // 把模版转换成对应的渲染函数 -> 虚拟dom概念vnode -> diff算法更新虚拟\n        // dom -> 产生真实节点，更新\n        if (!vm.$options.render) { // 没有render用template\n            let template = options.template;\n            if (!template && el) { // 用户也没有传递template，获取el的内容作为模板\n                template = el.outerHTML;\n                let render = compilerFunction(template);\n                options.render = render; // 生成渲染函数\n            }\n        }\n\n    }\n}","import { initMixin } from \"./init\";\n\nfunction Vue(options) {\n    // options为用户传入的选项\n    this._init(options); // 初始化操作，将_init方法放在原型上，是为了组件可以调用\n}\n\n// 扩展原型\ninitMixin(Vue);\n\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","start","tagName","attributes","console","log","end","chars","text","parserHTML","html","advance","len","substring","parseStartTag","match","attrs","length","attr","push","name","value","textEnd","indexOf","startTagMatch","endTagMatch","compilerFunction","template","isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","proxy","source","newValue","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}